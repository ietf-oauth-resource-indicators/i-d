<?xml version="1.0" encoding="us-ascii"?>
<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc category="std" docName="draft-ietf-oauth-resource-indicators-01" ipr="trust200902">
  <front>
    <title abbrev="OAuth Resource Indicators">Resource Indicators for OAuth 2.0</title>

    <author fullname="Brian Campbell" initials="B." surname="Campbell">
      <organization>Ping Identity</organization>
      <address><email>brian.d.campbell@gmail.com</email></address>
    </author>

    <author fullname="John Bradley" initials="J." surname="Bradley">
      <organization>Ping Identity</organization>
      <address><email>ve7jtb@ve7jtb.com</email></address>
    </author>

    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>Arm Limited</organization>
      <address><email>hannes.tschofenig@gmx.net</email></address>
    </author>

    <date />

    <area>Security</area>
    <workgroup>OAuth Working Group</workgroup>

    <keyword>OAuth</keyword>
    <keyword>Resource</keyword>

    <abstract>
      <t>
        An extension to The OAuth 2.0
        Authorization Framework defining request parameters that enable a client
        to explicitly signal to an authorization server about the location of the protected
        resource(s) to be accessed.
      </t>
    </abstract>

  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
<t>
  Several years of deployment and implementation experience with <xref target="RFC6749">OAuth 2.0</xref>
  has uncovered a need, in some circumstances, for the client to explicitly signal to the authorization server where
  it intends to use the access token it is requesting.
</t>
<t>
  Knowing the protected resource (a.k.a. resource server, application, API, etc.) that will process the access token enables the authorization server to construct the token
  as necessary for that entity. Properly encrypting the token (or content within the token) to a particular resource, for example,
  requires knowing which resource will receive and decrypt the token. Furthermore, various resources oftentimes have
  different requirements with respect to the data contained in, or referenced by, the token and knowing the resource
  where the client intends to use the
  token allows the the authorization server to mint the token accordingly.
</t>
<t>
  Specific knowledge of the intended recipient(s) of the access token also helps facilitate improved
  security characteristics of the token itself.
  Bearer tokens, currently the only defined type of OAuth access token,
  allow any party in possession of a token to get access to the associated resources.
  To prevent misuse, two important security assumptions must hold:
  bearer tokens must be protected from disclosure in storage and in
  transit and the access token must only be valid for use at a
  specific protected resource and for a specific scope.  When the authorization server is informed of
  the resource that will process the access token, it can restrict the intended audience of that token
  such that it cannot be used at other resources.
  <xref target="RFC6750">Section 5.2 of OAuth 2.0 Authorization Framework: Bearer Token Usage</xref>
  prescribes including the token's intended recipients within the token to prevent token redirect.
</t>
<t>
  Scope, from Section 3.3 of <xref target="RFC6749">OAuth 2.0</xref>, sometimes is overloaded to convey the
  location or identity of the protected resource, however, doing so isn't always feasible or desirable. Scope is
  typically about what access is being requested rather than where that access will be redeemed
  (e.g. <spanx style="verb">email</spanx>, <spanx style="verb">user:follow</spanx>, <spanx style="verb">user_photos</spanx>,
  and <spanx style="verb">channels:read</spanx> are a small sample of scope values in use).
</t>
<t>
  A means for the client to signal to the authorization server where it intends to use the access token it's requesting
  is important and useful. A number of implementations and deployments of OAuth 2.0 have already employed proprietary parameters
  toward that end.
  This specification aims to provide a standardized and interoperable alternative to the proprietary approaches going forward.
</t>
    <section anchor="RNC" title="Requirements Notation and Conventions">
<t>
  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL"
  in this document are to be interpreted as described in
  BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
  when, and only when, they appear in all capitals, as shown here.
</t>
    </section>

    <section anchor="Terminology" title="Terminology">
      <t>
        This specification uses the terms
        "access token",
        "refresh token",
        "authorization server",
        "resource server",
        "authorization endpoint",
        "authorization request",
        "authorization response",
        "token endpoint",
        "grant type",
        "access token request",
        "access token response",
        and "client"
        defined by <xref target="RFC6749">The OAuth 2.0 Authorization Framework</xref>.
      </t>
    </section>

    </section>

    <section anchor="ResourceParameter" title="Resource Parameter">
      <t>
        The client may indicate the protected resource(s) for which it is requesting an access token by
        including the following parameter in the request.
      </t>
      <t>
      <list style="hanging">

      <t hangText="resource">
        <vspace/>
        OPTIONAL. The value of the
        <spanx style="verb">resource</spanx>
        parameter indicates a resource where the requested access token will be used. It MUST be an
        absolute URI, as specified by Section 4.3 of <xref target="RFC3986"/>,
        which MAY include a query component but MUST NOT include a fragment component. If the authorization server fails to parse the
        provided value or does not consider the resource acceptable, it SHOULD reject the request and
        provide an error response with the error code <spanx style="verb">invalid_target</spanx>. Multiple
        <spanx style="verb">resource</spanx>
        parameters may be used to indicate
        that the issued token is intended to be used at multiple resources.
      </t>
      </list>
      </t>
      <t>
        When an access token will be returned from the authorization endpoint, the <spanx style="verb">resource</spanx>
        parameter is used in the authorization request to the authorization endpoint as defined in Section 4.2.1 of <xref target="RFC6749">OAuth 2.0</xref>.
        An example of an authorization request where the client tells the authorization server that it wants a token for use at
        <spanx style="verb">https://rs.example.com/</spanx> is shown in <xref target="authz-endpoint"/> below.
      </t>
<figure title="Protected Resource Request" anchor="authz-endpoint">
<artwork><![CDATA[
  GET /as/authorization.oauth2?response_type=token
     &client_id=s6BhdRkqt3&state=laeb
     &redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb
     &resource=https%3A%2F%2Frs.example.com%2F HTTP/1.1
  Host: authorization-server.example.com
]]></artwork>
</figure>
      <t>
        When the access token is returned from the token endpoint, the request parameter is included in the token request to the token endpoint.
        Sections 4.1.1, 4.3.1, 4.4.2, 4.5 and 6 of <xref target="RFC6749">OAuth 2.0</xref> define requests to the token endpoint with different grant types.
        An example of a token request, using a refresh token, where the client tells the authorization server that it wants a token for use at
        <spanx style="verb">https://rs.example.com/</spanx> is shown in <xref target="token-endpoint"/> below.
      </t>
<figure title="Protected Resource Request" anchor="token-endpoint">
<artwork><![CDATA[
  POST /as/token.oauth2 HTTP/1.1
  Host: authorization-server.example.com
  Authorization: Basic czZCaGRSa3F0Mzpoc3FFelFsVW9IQUU5cHg0RlNyNHlJ
  Content-Type: application/x-www-form-urlencoded

  grant_type=refresh_token
  &refresh_token=4LTC8lb0acc6Oy4esc1Nk9BWC0imAwH
  &resource=https%3A%2F%2Frs.example.com%2F
]]></artwork>
</figure>
      <t>
        The <spanx style="verb">resource</spanx> parameter indicates the location of a protected resource, typically as an https URL,
        where the client intends to use
        the requested access token. This enables the authorization server to apply policy as appropriate
        for the resource, such as determining the type and content of the token to be issued, if and how
        the token is to be encrypted, and applying appropriate audience restrictions to the token.
      </t>
      <t>
        The client SHOULD provide the most specific URI that it can for the set of resources or API it intends to access.
        In practice a client will know a base URI for the resource or application that it interacts with, which
        is appropriate to use as the value of the <spanx style="verb">resource</spanx> parameter.
        The client SHOULD use the base URI for the API unless specific knowledge of the resource
        dictates the client use a shorter path.
        For example, the value <spanx style="verb">https://rs.example.com/</spanx> would be used
        for a resource that is the exclusive application on that host, however,
        if the resource is one of many applications on that host, something like
        <spanx style="verb">https://rs.example.com/application/</spanx> would be used.
        Another example, for an API like <xref target="RFC7644">SCIM</xref> that has multiple endpoints such as
        <spanx style="verb">https://rs.example.com/scim/Users</spanx>,
        <spanx style="verb">https://rs.example.com/scim/Groups</spanx>, and
        <spanx style="verb">https://rs.example.com/scim/Schemas</spanx>
        The client would use <spanx style="verb">https://rs.example.com/scim/</spanx> as the resource
        so that the issued access token is valid for all the endpoints of the SCIM API.
      </t>
      <t>
        The authorization server SHOULD audience restrict the access token to the
        resource(s) indicated by the <spanx style="verb">resource</spanx> parameter.
        Audience restrictions can be communicated in <xref target="RFC7519">JSON Web Tokens</xref> with the <spanx style="verb">aud</spanx> claim
        and the top-level member of the same name provides the audience restriction information in a <xref target="RFC7662">Token Introspection</xref> response.
        The authorization server may use the exact <spanx style="verb">resource</spanx> value as the audience or it may map from that value to a more
        general URI or abstract identifier for the resource.
      </t>
      <t>
        The requested resource pertains to the access token that is the expected result of the request and
        not to the underlying access granted by the resource owner.
      </t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        An access token that is audience restricted to a protected resource, which obtains the
        token legitimately, cannot be used to access resources on behalf of the
        resource owner at other protected resources. The <spanx style="verb">resource</spanx>
        parameter enables a client to indicate the protected resources where the requested access
        token will be used, which in turn enables the authorization server to apply the
        appropriate audience restrictions to the token.
      </t>
      <t>
        Some servers may host user content or be multi-tenant. In order to avoid attacks that might
        confuse a client into sending a AT to a resource that is user controlled or is owned by a different tenant,
        it is important to use a specific
        resource URI including a path component. This will cause any AT issued for
        accessing the user controlled resource to have a invalid audience if replayed against the legitimate
        resource API.
      </t>
      <t>
        Although multiple occurrences of the <spanx style="verb">resource</spanx> parameter
        may be included in a request, using only a single <spanx style="verb">resource</spanx> parameter
        is encouraged. A bearer token that has multiple intended recipients (audiences) can be used by
        any one of those recipients at any other. Thus, a high degree of trust between the involved parties
        is needed when using access tokens with multiple audiences. Furthermore an authorization server may
        be unwilling or unable to fulfill a token request with multiple resources.
      </t>
    </section>


    <section anchor="IANA" title="IANA Considerations">

      <section anchor="OAuthParametersReg" title="OAuth Parameters Registration">

        <t>
          This specification registers the following value
          in the IANA "OAuth Parameters" registry
          <xref target="IANA.OAuth.Parameters"/>
          established by <xref target="RFC6749"/>.
        </t>

        <section anchor="ParametersContents" title="Registry Contents">

          <t>
            <?rfc subcompact="yes"?>
            <list style='symbols'>
              <t>Parameter name: resource</t>
              <t>Parameter usage location: authorization request, token request
                [[TODO: draft-ietf-oauth-token-exchange will have already registered this for 'token request'
                and this draft has a more generalized usage and needs to somehow either update that registration
                or do a partial registration and reference]]</t>
              <t>Change controller: IESG</t>
              <t>Specification document(s): <xref target="ResourceParameter"/> of [[ this specification ]]</t>
            </list>
          </t>
        </section>
      </section>
      <section anchor="OAuthErrReg" title="OAuth Extensions Error Registration">

        <t>
          This specification registers the following error in
          the IANA "OAuth Extensions Error Registry"
          <xref target="IANA.OAuth.Parameters"/>
          established by <xref target="RFC6749"/>.
        </t>

        <section anchor="ErrorssContents" title="Registry Contents">

          <t>
            <?rfc subcompact="yes"?>
            <list style='symbols'>
              <t>Error name: invalid_target</t>
              <t>Error usage location: implicit grant error response, token error response
                [[TODO: draft-ietf-oauth-token-exchange will have already registered this for 'token error response'
                and this draft has a more generalized usage and needs to somehow either update that registration
                or do a partial registration and reference]]</t>
              <t>Related protocol extension: resource parameter</t>
              <t>Change controller: IESG</t>
              <t>Specification document(s): <xref target="ResourceParameter"/> of [[ this specification ]]</t>
            </list>
          </t>
        </section>
      </section>

    </section>

  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml' ?>

      <reference anchor="IANA.OAuth.Parameters" target="http://www.iana.org/assignments/oauth-parameters">
        <front>
          <title>OAuth Parameters</title>
          <author>
            <organization>IANA</organization>
          </author>
          <date/>
        </front>
      </reference>

    </references>

    <references title="Informative References">
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7662.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6750.xml' ?>
      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7644.xml' ?>
    </references>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>
        This specification was developed within the OAuth Working Group
        under the chairmanship of Hannes Tschofenig
        and Rifaat Shekh-Yusef with Eric Rescorla and Ben K
        serving as Security Area Directors.  Additionally, the following
        individuals contributed ideas, feedback, and wording
        that helped shape this specification:</t>
      <t>
        Sergey Beryozkin,
        William Denniss,
        Vladimir Dzhuvinov,
        George Fletcher,
        Dick Hardt,
        Phil Hunt,
        Michael Jones,
        Torsten Lodderstedt,
        Anthony Nadalin,
        Justin Richer,
        Nat Sakimura,
        Filip Skokan,
        and
        Hans Zandbelt.
      </t>
    </section>

    <section anchor="History" title="Document History">
      <?rfc subcompact="yes"?>
      <t>
	[[ to be removed by the RFC Editor before publication as an RFC ]]
      </t>
      <t>
        draft-ietf-oauth-resource-indicators-01
        <list style='symbols'>
          <t>Editorial updates.</t>
          <t>Rework the Acknowledgements section.</t>
          <t>Use RFC 8174 boilerplate.</t>
          <t>Change the "invalid_resource" error to "invalid_target" to align with draft-ietf-oauth-token-exchange, which has some overlap in functionality.</t>
          <t>Allow the "resource" parameter value to have a query component (aligning with draft-ietf-oauth-token-exchange).</t>
          <t>Moved the Security Considerations section to before the IANA Considerations.</t>
        </list>
      </t>	    
      <t>
        draft-ietf-oauth-resource-indicators-00
        <list style='symbols'>
          <t>
            First version of the working group document. A replica of draft-campbell-oauth-resource-indicators-02.
          </t>
        </list>
      </t>
      <t>
        draft-campbell-oauth-resource-indicators-02
        <list style='symbols'>
          <t>No changes.</t>
        </list>
      </t>
      <t>
        draft-campbell-oauth-resource-indicators-01
        <list style='symbols'>
          <t>
            Move Hannes Tschofenig, who wrote https://tools.ietf.org/html/draft-tschofenig-oauth-audience in '13, from Acknowledgements to Authors.
          </t>
          <t>
            Added IANA Considerations to register the "resource" parameter and "invalid_resource" error code.
          </t>
        </list>
      </t>
      <t>
        draft-campbell-oauth-resource-indicators-00
        <list style='symbols'>
          <t>
            Initial draft to define a resource parameter for OAuth 2.0.
          </t>
        </list>
      </t>
      <?rfc subcompact="no"?>
    </section>     

  </back>
</rfc>
